use reqwest;

pub async fn render(code: String) -> Result<Vec<u8>, reqwest::Error> {
    let color = r"{\color{white}";
    let end = "}";
    let data = reqwest::get(
        format!(
            "https://latex.codecogs.com/png.image?{}{}{}",
            color, code, end
        )
        .as_str(),
    )
    .await?
    .bytes()
    .await?;

    Ok(data.to_vec())
}

#[cfg(test)]
mod tests {
    use super::*;

    #[tokio::test]
    async fn test_render() {
        let img = render(String::from("c^2 = a^2 + b^2")).await.unwrap();

        assert_eq!(
            img,
            vec![
                137, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 92, 0, 0, 0,
                19, 4, 3, 0, 0, 0, 239, 207, 119, 210, 0, 0, 0, 48, 80, 76, 84, 69, 255, 255, 255,
                255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 78, 175, 184, 64,
                0, 0, 0, 15, 116, 82, 78, 83, 0, 84, 102, 34, 171, 137, 118, 205, 16, 50, 221, 153,
                187, 68, 239, 27, 160, 123, 31, 0, 0, 0, 9, 112, 72, 89, 115, 0, 0, 14, 196, 0, 0,
                14, 196, 1, 149, 43, 14, 27, 0, 0, 1, 42, 73, 68, 65, 84, 40, 21, 125, 145, 175,
                79, 195, 80, 16, 199, 191, 221, 107, 150, 50, 40, 12, 150, 16, 112, 35, 132, 4, 49,
                146, 41, 196, 204, 18, 2, 216, 49, 129, 159, 34, 33, 65, 204, 16, 108, 37, 14, 28,
                2, 129, 69, 242, 167, 204, 33, 48, 4, 12, 134, 100, 132, 32, 80, 112, 215, 187,
                119, 180, 188, 102, 39, 94, 239, 125, 190, 159, 190, 31, 45, 64, 21, 109, 61, 240,
                163, 84, 21, 204, 163, 93, 28, 148, 84, 158, 84, 48, 143, 110, 208, 9, 244, 10,
                246, 135, 142, 3, 29, 168, 96, 138, 146, 251, 80, 47, 51, 55, 232, 2, 30, 197, 215,
                161, 254, 143, 221, 145, 225, 209, 169, 11, 117, 207, 50, 137, 248, 118, 138, 210,
                73, 61, 208, 141, 237, 72, 116, 8, 120, 212, 255, 249, 10, 116, 99, 170, 191, 3,
                57, 138, 54, 90, 129, 123, 178, 78, 23, 211, 18, 221, 125, 172, 54, 115, 176, 231,
                255, 209, 252, 62, 215, 17, 193, 133, 118, 60, 246, 54, 68, 175, 189, 226, 141, 81,
                125, 140, 53, 139, 180, 233, 32, 230, 183, 164, 68, 39, 64, 199, 1, 150, 218, 66,
                139, 227, 11, 22, 39, 50, 167, 29, 47, 242, 29, 9, 124, 51, 234, 103, 18, 20, 70,
                247, 9, 254, 202, 90, 178, 250, 21, 162, 41, 3, 10, 18, 9, 236, 236, 115, 83, 156,
                165, 42, 67, 207, 222, 67, 60, 98, 212, 232, 98, 211, 34, 109, 158, 147, 243, 154,
                49, 89, 189, 129, 199, 156, 184, 225, 74, 102, 145, 54, 79, 203, 183, 219, 198, 68,
                79, 135, 35, 35, 51, 27, 209, 103, 42, 197, 240, 178, 56, 249, 5, 124, 210, 55,
                154, 205, 95, 157, 30, 0, 0, 0, 0, 73, 69, 78, 68, 174, 66, 96, 130
            ]
        )
    }
}
